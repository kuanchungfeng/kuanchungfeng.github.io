<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Arthur on Arthur's Blog</title><link>https://kuanchungfeng.github.io/authors/arthur/</link><description>Recent content in Arthur on Arthur's Blog</description><generator>Hugo</generator><language>zh-tw</language><lastBuildDate>Sat, 14 Dec 2024 11:43:39 +0800</lastBuildDate><atom:link href="https://kuanchungfeng.github.io/authors/arthur/index.xml" rel="self" type="application/rss+xml"/><item><title>10個實用的Github Copilot用法</title><link>https://kuanchungfeng.github.io/posts/github-copilot-ten-useful-trick/</link><pubDate>Sat, 14 Dec 2024 11:43:39 +0800</pubDate><guid>https://kuanchungfeng.github.io/posts/github-copilot-ten-useful-trick/</guid><description>&lt;p&gt;工程師的日常總是有永無止境的 task，因此開發效率是工程師的一大追求目標。Github Copilot 做為一個開發 AI 工具，能做的事很多，包含程式碼的生成與解釋、修正具體的錯誤、優化程式碼、撰寫測試和文件等等。&lt;/p&gt;</description></item><item><title>用烤肉來看工廠模式(下)</title><link>https://kuanchungfeng.github.io/posts/factory2/</link><pubDate>Tue, 14 Sep 2021 21:31:47 +0800</pubDate><guid>https://kuanchungfeng.github.io/posts/factory2/</guid><description>&lt;div class="paragraph"&gt;
&lt;p&gt;上一篇看完了情境，這一篇來說工廠模式的五大成分：&lt;/p&gt;
&lt;/div&gt;</description></item><item><title>用烤肉來看工廠模式(上)</title><link>https://kuanchungfeng.github.io/posts/factory/</link><pubDate>Wed, 08 Sep 2021 18:35:04 +0800</pubDate><guid>https://kuanchungfeng.github.io/posts/factory/</guid><description>&lt;div class="sect1"&gt;
&lt;h2 id="_工廠模式三大類"&gt;&lt;a class="anchor" href="#_工廠模式三大類"&gt;&lt;/a&gt;工廠模式三大類&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="olist arabic"&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;
&lt;p&gt;簡單工廠模式(Simple Factory)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;工廠方法模式(Factory Method)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;抽象工廠模式(Abstract Factory)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</description></item><item><title>設計模式學習地圖</title><link>https://kuanchungfeng.github.io/posts/design-pattern-learning-guide/</link><pubDate>Tue, 07 Sep 2021 22:53:34 +0800</pubDate><guid>https://kuanchungfeng.github.io/posts/design-pattern-learning-guide/</guid><description>&lt;div class="sect1"&gt;
&lt;h2 id="_前言"&gt;前言&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;學習設計模式之前，最好對&lt;strong&gt;OO(物件導向)&lt;/strong&gt;相關知識有一定的了解，這樣可以快速了解每個設計模式的運作機制，下圖為設計模式背景知識地圖：&lt;/p&gt;
&lt;/div&gt;</description></item><item><title>認識設計模式，提升你程式的可利用性</title><link>https://kuanchungfeng.github.io/posts/design-pattern-guide/</link><pubDate>Mon, 06 Sep 2021 23:29:10 +0800</pubDate><guid>https://kuanchungfeng.github.io/posts/design-pattern-guide/</guid><description>&lt;div class="sect1"&gt;
&lt;h2 id="_設計模式是什麼"&gt;設計模式是什麼?&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;&lt;strong&gt;設計模式&lt;/strong&gt;(Design Pattern)是一個為了解決特定問題的解決方案，是一套為了解決人類反覆遇到的問題，經過整理的程式設計經驗總結。&lt;/p&gt;
&lt;/div&gt;</description></item><item><title>深入淺出JasperReports</title><link>https://kuanchungfeng.github.io/posts/jasper-report/</link><pubDate>Fri, 26 Feb 2021 18:35:04 +0800</pubDate><guid>https://kuanchungfeng.github.io/posts/jasper-report/</guid><description>&lt;div class="sect1"&gt;
&lt;h2 id="_簡介"&gt;&lt;a class="anchor" href="#_簡介"&gt;&lt;/a&gt;簡介&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="ulist"&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;為 Java 開發的&lt;strong&gt;開源&lt;/strong&gt;程式庫&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;開發易擴充的動態報表&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;具有表格、圖表、地圖、子報表等功能&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;支援匯出多種格式(docx、xls、odt、ods、pdf、html…​)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;可以通過多種方式提供數據(csv、JDBC、json…​)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;</description></item></channel></rss>